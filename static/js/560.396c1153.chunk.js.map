{"version":3,"file":"static/js/560.396c1153.chunk.js","mappings":"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","sources":["apis/photoAPI.ts","componenets/UI/Image/Image.tsx","componenets/UI/Image/ImageSkeleton.tsx","hooks/useIsImageLoaded.ts","componenets/UI/skeletonElement/SkeletonElement.tsx","componenets/banner/Banner.tsx","componenets/UI/textCard/TextCard.tsx","componenets/service/Service.tsx","componenets/UI/submitInput/SubmitInput.tsx","componenets/subscribe/Subscribe.tsx","hooks/useFetching.ts","hooks/useInitializeCSSVariable.ts","hooks/useMediaQuery.ts","hooks/useReactiveVariable.ts","componenets/about/About.tsx","pages/aboutPage/AboutPage.tsx"],"sourcesContent":["type OrientationType = \"landscape\" | \"portrait\" | \"square\";\r\ntype SizeType = \"large\" | \"medium\" | \"small\";\r\n\r\ntype PhotosParams = {\r\n  query: string;\r\n  amount: number;\r\n  page?: number;\r\n  orientation?: OrientationType;\r\n  size?: SizeType;\r\n  color?: string;\r\n};\r\n\r\nexport class PhotoAPI {\r\n  static async fetchPhotos({\r\n    query,\r\n    amount,\r\n    page,\r\n    size,\r\n    orientation,\r\n    color,\r\n  }: PhotosParams) {\r\n    const response = await fetch(\r\n      `https://api.pexels.com/v1/search?\r\n\t\t\tquery=${query}\r\n\t\t\t&per_page=${amount}\r\n\t\t\t${page ? \"&page=\" + page : \"\"}\r\n\t\t\t${size ? \"&size=\" + size : \"\"}\r\n\t\t\t${orientation ? \"&orientation=\" + orientation : \"\"}\r\n\t\t\t${color ? \"&color=\" + color : \"\"}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: process.env.REACT_APP_API_KEY\r\n            ? process.env.REACT_APP_API_KEY\r\n            : \"\",\r\n        },\r\n      }\r\n    );\r\n    const photos = await response.json();\r\n    return photos as SearchImageResult;\r\n  }\r\n}\r\n\r\nexport type PhotoType = {\r\n  id: number;\r\n  width: number;\r\n  height: number;\r\n  url: string;\r\n  photographer: string;\r\n  photographer_url: string;\r\n  photographer_id: string;\r\n  avg_color: string;\r\n  src: {\r\n    original: string;\r\n    large2x: string;\r\n    large: string;\r\n    medium: string;\r\n    small: string;\r\n    portrait: string;\r\n    landscape: string;\r\n    tiny: string;\r\n  };\r\n  liked: boolean;\r\n  alt: string;\r\n};\r\n\r\nexport type SearchImageResult = {\r\n  total_results: number;\r\n  page: number;\r\n  per_page: number;\r\n  photos: PhotoType[];\r\n  next_page: string;\r\n};\r\n","import React, { useEffect } from 'react'\r\nimport \"./Image.scss\";\r\n\r\n\r\ntype Props = React.ImgHTMLAttributes<HTMLImageElement> & {\r\n\tclassName?: string,\r\n\timgFit?: \"cover\" | \"contain\",\r\n}\r\n\r\nconst Image = ({ className, imgFit = \"cover\", src, ...imgAttributes }: Props) => {\r\n\r\n\treturn (\r\n\t\t<div className={`image ${className ? className : \"\"}`}>\r\n\t\t\t< img\r\n\t\t\t\tloading='lazy'\r\n\t\t\t\tsrc={src}\r\n\t\t\t\t{...imgAttributes}\r\n\t\t\t\tclassName='image__content'\r\n\t\t\t\tstyle={{ objectFit: imgFit }}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Image;","import React, { useEffect, useRef, useState } from 'react'\r\nimport \"./Image.scss\";\r\nimport { setCSSVariable } from '../../../utils/functions';\r\nimport { useIsImageLoaded } from '../../../hooks/useIsImageLoaded';\r\nimport { useInitializeCSSVariable } from '../../../hooks/useInitializeCSSVariable';\r\n\r\ntype Props = React.ImgHTMLAttributes<HTMLImageElement> & {\r\n\tclassName?: string,\r\n\timgFit?: \"cover\" | \"contain\",\r\n\tskeletonColor?: string,\r\n\tsmallResolutionSrc?: string, \r\n}\r\n\r\nconst ImageSkeleton = ({ className, imgFit = \"cover\", src, skeletonColor, ...imgAttributes }: Props) => {\r\n\tconst imgLoaded = useIsImageLoaded(src);\r\n\tconst skeletonElementRef = useRef(null);\r\n\tuseInitializeCSSVariable(skeletonElementRef, \"--skeleton-color\", skeletonColor);\r\n\r\n\treturn (\r\n\t\t<div className={`image image-skeleton ${className ? className : \"\"} ${!imgLoaded ? \"isLoading\" : \"\"}`}>\r\n\t\t\t{imgLoaded\r\n\t\t\t\t?\r\n\t\t\t\t< img\r\n\t\t\t\t\tloading='lazy'\r\n\t\t\t\t\tsrc={src}\r\n\t\t\t\t\t{...imgAttributes}\r\n\t\t\t\t\tclassName='image__content'\r\n\t\t\t\t\tstyle={{ objectFit: imgFit }} />\r\n\t\t\t\t:\r\n\t\t\t\t<div ref={skeletonElementRef} className='image__content-skeleton' ></div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ImageSkeleton;","import { useState, useEffect } from \"react\";\r\n\r\nexport function useIsImageLoaded(src: string | undefined): boolean {\r\n\t\r\n\tconst [loaded, setLoaded] = useState(false);\r\n  useEffect(() => {\r\n\t\tif (!src) return;\r\n    const img = document.createElement(\"img\");\r\n    img.src = src;\r\n    img.onload = () => {\r\n\t\t\tsetLoaded(true);\r\n    };\r\n  }, [src]);\r\n\r\n  return loaded;\r\n}\r\n","import React, { useRef } from 'react'\r\nimport \"./SkeletonElement.scss\";\r\nimport { useInitializeCSSVariable } from '../../../hooks/useInitializeCSSVariable';\r\ntype Props = {\r\n\tskeletonColor?: string,\r\n\tclassName?: string,\r\n}\r\n\r\nfunction SkeletonElement({ skeletonColor, className }: Props) {\r\n\tconst skeletonRef = useRef<HTMLDivElement | null>(null);\r\n\tuseInitializeCSSVariable(skeletonRef, \"--skeleton-color\", skeletonColor);\r\n\treturn (\r\n\t\t<div ref={skeletonRef} className={`skeleton-element ${className ? className : \"\"}`}></div>\r\n\t)\r\n}\r\n\r\nexport default SkeletonElement","import React, { useEffect, useState } from 'react'\r\nimport \"./Banner.scss\";\r\nimport ImageSkeleton from '../UI/Image/ImageSkeleton';\r\nimport Image from '../UI/Image/Image';\r\nimport { PhotoAPI } from '../../apis/photoAPI';\r\nimport { useFetching } from '../../hooks/useFetching';\r\nimport SkeletonElement from '../UI/skeletonElement/SkeletonElement';\r\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\r\ntype Props = {\r\n\ttext: string,\r\n\tcolorTextIndexes?: number[],\r\n}\r\n\r\nfunction Banner({ text, colorTextIndexes }: Props) {\r\n\tconst [isMobile, isMobileRef] = useMediaQuery(\"(max-width: 768px)\");\r\n\r\n\tconst [textElement, setTextElement] = useState<React.ReactElement | string>(\"\");\r\n\r\n\tfunction initText() {\r\n\t\tif (!colorTextIndexes) {\r\n\t\t\tsetTextElement(text);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet textArr: (React.ReactElement | string)[] = text.split(\" \");\r\n\t\ttextArr = textArr.map((text, idx) => colorTextIndexes.includes(idx) ? <span key={idx} className='_colored-orange'>{text + \" \"}</span> : text + \" \");\r\n\t\tsetTextElement(<h1 className='banner-section__text'>{textArr}</h1>)\r\n\t}\r\n\r\n\tconst [bannerImg, setBannerImg] = useState<string>();\r\n\tconst [getBannerImg, isImgLoading, error] = useFetching(async () => {\r\n\t\tconst image = await PhotoAPI.fetchPhotos({\r\n\t\t\tquery: \"view of a tropical island with overwater bungalows, clear blue ocean, and lush greenery.\",\r\n\t\t\tamount: 1,\r\n\t\t\tpage: Math.round(Math.random() * 20),\r\n\t\t\torientation: \"landscape\",\r\n\t\t\tsize: \"large\",\r\n\t\t});\r\n\t\tif (isMobileRef.current) {\r\n\t\t\tsetBannerImg(image.photos[0].src.large);\r\n\t\t} else {\r\n\t\t\tsetBannerImg(image.photos[0].src.large2x);\r\n\t\t}\r\n\t})\r\n\tuseEffect(() => {\r\n\t\tgetBannerImg();\r\n\t\tinitText();\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className='banner-section'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<div className='banner-section__container'>\r\n\t\t\t\t\t{textElement}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{(isImgLoading || !bannerImg) ?\r\n\t\t\t\t<SkeletonElement className='banner-section__skeleton' />\r\n\t\t\t\t:\r\n\t\t\t\t<ImageSkeleton className='banner-section__image' src={bannerImg}/>\r\n\t\t\t}\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Banner","import React from 'react'\r\nimport \"./TextCard.scss\";\r\ntype Props = {\r\n\ticonClass?: string\r\n\ttitle: string,\r\n\ttext: string,\r\n\tclassName?: string,\r\n}\r\n\r\nfunction TextCard({ iconClass, title, text, className }: Props) {\r\n\treturn (\r\n\t\t<div className={`text-card ${className ? className : \"\"}`}>\r\n\t\t\t<div className={`text-card__icon ${iconClass ? \"\" : \"no-icon\"}`}>\r\n\t\t\t\t<i className={`text-card__icon-content ${iconClass ? iconClass : \"\"}`}></i>\r\n\t\t\t</div>\r\n\t\t\t<div className='text-card__content'>\r\n\t\t\t\t<h3 className='text-card__title'>{title}</h3>\r\n\t\t\t\t<p className='text-card__text'>{text}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default TextCard","import React from 'react'\r\nimport \"./Service.scss\";\r\nimport TextCard from '../UI/textCard/TextCard';\r\ntype Props = {\r\n\tclassName?: string,\r\n\tisAnimated?: boolean\r\n}\r\n\r\nfunction Service({ className, isAnimated = true }: Props) {\r\n\r\n\tconst textCards = [\r\n\t\t{\r\n\t\t\ticon: \"icon-weather\",\r\n\t\t\ttitle: \"Calculate Weather\",\r\n\t\t\ttext: \"Check weather forecasts quickly.\",\r\n\t\t},\r\n\t\t{\r\n\t\t\ticon: \"icon-guide\",\r\n\t\t\ttitle: \"Best Tour Guide\",\r\n\t\t\ttext: \"Explore with expert guides.\",\r\n\t\t}, {\r\n\t\t\ticon: \"icon-customization\",\r\n\t\t\ttitle: \"Customization\",\r\n\t\t\ttext: \"Personalize your travel experience.\",\r\n\t\t}\r\n\t] as const;\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className={`service-section ${className ? className : \"\"}`}>\r\n\t\t\t\t<div className='service-section__header'>\r\n\t\t\t\t\t<h3 className=\"service-section__sub-title\">What we serve</h3>\r\n\t\t\t\t\t<h2 className='service-section__title'>We offer out best services</h2>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={`service-section__content ${isAnimated ? \"_scroll-animation-once\" : \"\"}`}>\r\n\t\t\t\t\t{textCards.map((card, idx) => (\r\n\t\t\t\t\t\t<TextCard className={`service-section__text-card service-section__text-card_${idx}`} key={idx} title={card.title} text={card.text} iconClass={card.icon} />\r\n\t\t\t\t\t))}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Service","import React from 'react'\r\nimport \"./SubmitInput.scss\";\r\nimport { Form } from 'react-router-dom';\r\ntype Props = {\r\n\tclassName?: string,\r\n}\r\n\r\nconst SubmitInput = ({className}: Props) => {\r\n\treturn (\r\n\t\t<Form className={`submit-input ${className ? className : \"\"}`} method=\"post\">\r\n\t\t\t<input placeholder='Enter your email' className='submit-input__input' type=\"text\" name=\"title\" />\r\n\t\t\t<button className='submit-input__submit' type=\"submit\">Subscribe</button>\r\n\t\t</Form>\r\n\t)\r\n}\r\n\r\nexport default SubmitInput","import React from 'react'\r\nimport \"./Subscribe.scss\";\r\nimport Image from '../UI/Image/Image';\r\nimport SubmitInput from '../UI/submitInput/SubmitInput';\r\n\r\ntype Props = {\r\n\tclassName?: string,\r\n\tanimated?: boolean,\r\n}\r\n\r\nconst Subscribe = ({ className, animated = true }: Props) => {\r\n\treturn (\r\n\t\t<div className={`subscribe-section ${className ? className : \"\"}`}>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<div className='subscribe-section__container'>\r\n\t\t\t\t\t<div className='subscribe-section__content'>\r\n\t\t\t\t\t\t<h2 className='subscribe-section__title'>Subscribe now to get useful traveling\r\n\t\t\t\t\t\t\tinformation</h2>\r\n\t\t\t\t\t\t<SubmitInput className={`subscribe-section__input ${animated ? \"_scroll-animation-once\" : \"\"}`}></SubmitInput>\r\n\t\t\t\t\t\t<p className='subscribe-section__text'>Enter your email to unlock travel secrets, exclusive deals, and expert tips delivered straight to your inbox!</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Image src={require(\"../../utils/images/png/tourist 2.png\")} className=\"subscribe-section__image _scroll-animation\"></Image>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Subscribe","import { useState } from 'react';\r\n\r\ntype Callback = (...args: any[]) => Promise<any>;\r\n\r\nexport function useFetching<T extends Callback>\r\n\t(callback: T, initialIsLoading = false): [(...args: Parameters<T>) => Promise<void>, boolean, Error | null] {\r\n\r\n\tconst [isLoading, setIsLoading] = useState(initialIsLoading);\r\n\tconst [error, setError] = useState<Error | null>(null);\r\n\tconst fetching = async (...args: Parameters<T>) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tawait callback(...args);\r\n\t\t} catch (e) {\r\n\t\t\tif (e instanceof Error) {\r\n\t\t\t\tsetError(e);\r\n\t\t\t} else {\r\n\t\t\t\tsetError(new Error('Unknown error occurred'));\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\treturn [fetching, isLoading, error];\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { setCSSVariable } from \"../utils/functions\";\r\n\r\nexport function useInitializeCSSVariable(\r\n  ref: React.MutableRefObject<unknown>,\r\n  varName: string,\r\n  value: string | undefined\r\n) {\r\n  useEffect(() => {\r\n    if (!value) return;\r\n    setCSSVariable(ref, varName, value);\r\n  }, []);\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { useReactiveVariable } from \"./useReactiveVariable\";\r\n\r\nexport const useMediaQuery = (\r\n  query: string,\r\n  callback: Function = () => {}\r\n): [boolean, React.MutableRefObject<any>] => {\r\n\tconst [matches, matchesRef, setMatches] = useReactiveVariable(false);\r\n\r\n  const handleChange = (e: MediaQueryListEvent) => {\r\n    setMatches(e.matches);\r\n    if (callback && e.matches) {\r\n      callback(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const m = window.matchMedia(query);\r\n\r\n    setMatches(m.matches);\r\n\r\n    m.addEventListener(\"change\", handleChange);\r\n\r\n    return () => {\r\n      m.removeEventListener(\"change\", handleChange);\r\n    };\r\n  }, []);\r\n\r\n  return [matches, matchesRef];\r\n};\r\n","import { useState, useRef, MutableRefObject } from \"react\";\r\n\r\nexport function useReactiveVariable<T>(startValue: T): [T, MutableRefObject<T>, (value: T) => void] {\r\n  const [renderValue, setRenderValue] = useState<T>(startValue);\r\n  const currentValue = useRef<T>(renderValue);\r\n\r\n  function setValue(value: T) {\r\n    setRenderValue(value);\r\n    currentValue.current = value;\r\n  }\r\n\r\n  return [renderValue, currentValue, setValue];\r\n}","import React, { useEffect, useState } from 'react'\r\nimport \"./About.scss\";\r\nimport { useFetching } from '../../hooks/useFetching';\r\nimport { PhotoAPI } from '../../apis/photoAPI';\r\nimport SkeletonElement from '../UI/skeletonElement/SkeletonElement';\r\nimport ImageSkeleton from '../UI/Image/ImageSkeleton';\r\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\r\ntype Props = {\r\n\tclassName?: string,\r\n}\r\n\r\nfunction About({ className }: Props) {\r\n\tconst [isMobile, isMobileRef] = useMediaQuery(\"(max-width: 1050px)\");\r\n\r\n\tconst [image, setImage] = useState<string | null>(null);\r\n\tconst [getImage, isImgLoading, error] = useFetching(async () => {\r\n\t\tconst image = await PhotoAPI.fetchPhotos({\r\n\t\t\tquery: \"picturesque scene of a narrow bay or lagoon surrounded by tall, steep cliffs covered in lush greenery.\",\r\n\t\t\tamount: 1,\r\n\t\t\tpage: Math.round(Math.random() * 20),\r\n\t\t\tsize: \"medium\",\r\n\t\t\torientation: \"landscape\",\r\n\t\t})\r\n\r\n\t\tsetImage(image.photos[0].src.medium);\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isMobileRef.current) {\r\n\t\t\tgetImage();\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className={`about-section ${className ? className : \"\"}`}>\r\n\t\t\t\t<div className='about-section__content'>\r\n\r\n\t\t\t\t\t<div className='about-section__block about-section__block_1 _scroll-animation-once'>\r\n\t\t\t\t\t\t<h2 className='about-section__title'>Who <span className='_colored-orange'>We Are</span></h2>\r\n\t\t\t\t\t\t<p className='about-section__text'>We’re all about creating unforgettable experiences for our\r\n\t\t\t\t\t\t\tguests. Our journey began with a simple passion for\r\n\t\t\t\t\t\t\texploring the beauty of the World.</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='about-section__block about-section__block_2 _scroll-animation-once'>\r\n\t\t\t\t\t\t<h2 className='about-section__title'>Our <span className='_colored-orange'>Mission</span></h2>\r\n\t\t\t\t\t\t<p className='about-section__text'>We believe that travel is not just about visiting new places,\r\n\t\t\t\t\t\t\tbut about immersing yourself in new cultures, connecting\r\n\t\t\t\t\t\t\twith nature, and making memories that last a lifetime.</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{!isMobileRef.current && ((isImgLoading || !image) ?\r\n\t\t\t\t\t<SkeletonElement className='about-section__skeleton' />\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ImageSkeleton className='about-section__image' src={image} />)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default About","import React, { useEffect, useState } from 'react'\r\nimport \"./AboutPage.scss\";\r\nimport { useHeaderType } from '../../App';\r\nimport Slider from '../../componenets/UI/slider/Slider';\r\nimport Image from '../../componenets/UI/Image/Image';\r\nimport Banner from '../../componenets/banner/Banner';\r\nimport About from '../../componenets/about/About';\r\nimport Service from '../../componenets/service/Service';\r\nimport useScrollAnimationOnce from '../../context/scrollAnimationOnce/useScrollAnimationOnce';\r\nimport useScrollAnimation from '../../context/scrollAnimation/useScrollAnimation';\r\nimport Subscribe from '../../componenets/subscribe/Subscribe';\r\ntype Props = {}\r\n\r\nfunction AboutPage({ }: Props) {\r\n\r\n\tuseScrollAnimationOnce();\r\n\r\n\tconst setHeaderType = useHeaderType();\r\n\tuseEffect(() => {\r\n\t\tsetHeaderType(\"all\");\r\n\t}, [])\r\n\treturn (\r\n\t\t<div className='about-page'>\r\n\t\t\t<Banner text='About Us' colorTextIndexes={[1]} />\r\n\t\t\t<About className='about-page__about' />\r\n\t\t\t<Service isAnimated={false} className='about-page__service' />\r\n\t\t\t<Subscribe className='about-page__subscribe' />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AboutPage"],"names":["PhotoAPI","fetchPhotos","_ref","query","amount","page","size","orientation","color","response","fetch","concat","method","headers","Authorization","process","json","className","imgFit","src","imgAttributes","_jsx","children","loading","style","objectFit","skeletonColor","imgLoaded","loaded","setLoaded","useState","useEffect","img","document","createElement","onload","useIsImageLoaded","skeletonElementRef","useRef","useInitializeCSSVariable","ref","skeletonRef","text","colorTextIndexes","isMobile","isMobileRef","useMediaQuery","textElement","setTextElement","bannerImg","setBannerImg","getBannerImg","isImgLoading","error","useFetching","async","image","Math","round","random","current","photos","large","large2x","textArr","split","map","idx","includes","initText","_jsxs","SkeletonElement","ImageSkeleton","iconClass","title","isAnimated","icon","card","TextCard","Form","placeholder","type","name","animated","SubmitInput","Image","require","callback","initialIsLoading","arguments","length","undefined","isLoading","setIsLoading","setError","e","Error","varName","value","setCSSVariable","matches","matchesRef","setMatches","useReactiveVariable","handleChange","m","window","matchMedia","addEventListener","removeEventListener","startValue","renderValue","setRenderValue","currentValue","setImage","getImage","medium","useScrollAnimationOnce","setHeaderType","useHeaderType","Banner","About","Service","Subscribe"],"sourceRoot":""}