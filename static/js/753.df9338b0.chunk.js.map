{"version":3,"file":"static/js/753.df9338b0.chunk.js","mappings":"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","sources":["apis/photoAPI.ts","componenets/UI/Image/Image.tsx","componenets/UI/Image/ImageSkeleton.tsx","hooks/useIsImageLoaded.ts","componenets/UI/fakeSearchBar/FakeSearchBar.tsx","componenets/UI/skeletonElement/SkeletonElement.tsx","componenets/banner/Banner.tsx","componenets/UI/submitInput/SubmitInput.tsx","componenets/subscribe/Subscribe.tsx","context/scrollAnimation/useScrollAnimationRef.ts","hooks/useFetching.ts","hooks/useInitializeCSSVariable.ts","hooks/useMediaQuery.ts","hooks/useReactiveVariable.ts","componenets/searchSection/SearchSection.tsx","componenets/paginationGallery/PaginationGallery.tsx","componenets/paginationGallery/PaginationGallerySkeleton.tsx","componenets/UI/button/PaginationButton.tsx","componenets/UI/loader/Loader.tsx","componenets/ourGallery/OurGallery.tsx","pages/galleryPage/GalleryPage.tsx"],"sourcesContent":["type OrientationType = \"landscape\" | \"portrait\" | \"square\";\r\ntype SizeType = \"large\" | \"medium\" | \"small\";\r\n\r\ntype PhotosParams = {\r\n  query: string;\r\n  amount: number;\r\n  page?: number;\r\n  orientation?: OrientationType;\r\n  size?: SizeType;\r\n  color?: string;\r\n};\r\n\r\nexport class PhotoAPI {\r\n  static async fetchPhotos({\r\n    query,\r\n    amount,\r\n    page,\r\n    size,\r\n    orientation,\r\n    color,\r\n  }: PhotosParams) {\r\n    const response = await fetch(\r\n      `https://api.pexels.com/v1/search?\r\n\t\t\tquery=${query}\r\n\t\t\t&per_page=${amount}\r\n\t\t\t${page ? \"&page=\" + page : \"\"}\r\n\t\t\t${size ? \"&size=\" + size : \"\"}\r\n\t\t\t${orientation ? \"&orientation=\" + orientation : \"\"}\r\n\t\t\t${color ? \"&color=\" + color : \"\"}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: process.env.REACT_APP_API_KEY\r\n            ? process.env.REACT_APP_API_KEY\r\n            : \"\",\r\n        },\r\n      }\r\n    );\r\n    const photos = await response.json();\r\n    return photos as SearchImageResult;\r\n  }\r\n}\r\n\r\nexport type PhotoType = {\r\n  id: number;\r\n  width: number;\r\n  height: number;\r\n  url: string;\r\n  photographer: string;\r\n  photographer_url: string;\r\n  photographer_id: string;\r\n  avg_color: string;\r\n  src: {\r\n    original: string;\r\n    large2x: string;\r\n    large: string;\r\n    medium: string;\r\n    small: string;\r\n    portrait: string;\r\n    landscape: string;\r\n    tiny: string;\r\n  };\r\n  liked: boolean;\r\n  alt: string;\r\n};\r\n\r\nexport type SearchImageResult = {\r\n  total_results: number;\r\n  page: number;\r\n  per_page: number;\r\n  photos: PhotoType[];\r\n  next_page: string;\r\n};\r\n","import React, { useEffect } from 'react'\r\nimport \"./Image.scss\";\r\n\r\n\r\ntype Props = React.ImgHTMLAttributes<HTMLImageElement> & {\r\n\tclassName?: string,\r\n\timgFit?: \"cover\" | \"contain\",\r\n}\r\n\r\nconst Image = ({ className, imgFit = \"cover\", src, ...imgAttributes }: Props) => {\r\n\r\n\treturn (\r\n\t\t<div className={`image ${className ? className : \"\"}`}>\r\n\t\t\t< img\r\n\t\t\t\tloading='lazy'\r\n\t\t\t\tsrc={src}\r\n\t\t\t\t{...imgAttributes}\r\n\t\t\t\tclassName='image__content'\r\n\t\t\t\tstyle={{ objectFit: imgFit }}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Image;","import React, { useEffect, useRef, useState } from 'react'\r\nimport \"./Image.scss\";\r\nimport { setCSSVariable } from '../../../utils/functions';\r\nimport { useIsImageLoaded } from '../../../hooks/useIsImageLoaded';\r\nimport { useInitializeCSSVariable } from '../../../hooks/useInitializeCSSVariable';\r\n\r\ntype Props = React.ImgHTMLAttributes<HTMLImageElement> & {\r\n\tclassName?: string,\r\n\timgFit?: \"cover\" | \"contain\",\r\n\tskeletonColor?: string,\r\n\tsmallResolutionSrc?: string, \r\n}\r\n\r\nconst ImageSkeleton = ({ className, imgFit = \"cover\", src, skeletonColor, ...imgAttributes }: Props) => {\r\n\tconst imgLoaded = useIsImageLoaded(src);\r\n\tconst skeletonElementRef = useRef(null);\r\n\tuseInitializeCSSVariable(skeletonElementRef, \"--skeleton-color\", skeletonColor);\r\n\r\n\treturn (\r\n\t\t<div className={`image image-skeleton ${className ? className : \"\"} ${!imgLoaded ? \"isLoading\" : \"\"}`}>\r\n\t\t\t{imgLoaded\r\n\t\t\t\t?\r\n\t\t\t\t< img\r\n\t\t\t\t\tloading='lazy'\r\n\t\t\t\t\tsrc={src}\r\n\t\t\t\t\t{...imgAttributes}\r\n\t\t\t\t\tclassName='image__content'\r\n\t\t\t\t\tstyle={{ objectFit: imgFit }} />\r\n\t\t\t\t:\r\n\t\t\t\t<div ref={skeletonElementRef} className='image__content-skeleton' ></div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ImageSkeleton;","import { useState, useEffect } from \"react\";\r\n\r\nexport function useIsImageLoaded(src: string | undefined): boolean {\r\n\t\r\n\tconst [loaded, setLoaded] = useState(false);\r\n  useEffect(() => {\r\n\t\tif (!src) return;\r\n    const img = document.createElement(\"img\");\r\n    img.src = src;\r\n    img.onload = () => {\r\n\t\t\tsetLoaded(true);\r\n    };\r\n  }, [src]);\r\n\r\n  return loaded;\r\n}\r\n","import React from 'react'\r\nimport \"./FakeSearchBar.scss\";\r\ntype Props = {\r\n\tclassName?: string,\r\n}\r\n\r\nfunction FakeSearchBar({ className }: Props) {\r\n\treturn (\r\n\t\t<div className={`fake-searchbar ${className ? className : \"\"}`}>\r\n\t\t\t<div className=\"fake-searchbar__container\">\r\n\r\n\t\t\t\t<div className='fake-searchbar__item-container'>\r\n\t\t\t\t\t<i className='icon-location fake-searchbar__icon'></i>\r\n\t\t\t\t\t<div className='fake-searchbar__content'>\r\n\t\t\t\t\t\t<h3 className='fake-searchbar__title'>Location</h3>\r\n\t\t\t\t\t\t<p className='fake-searchbar__text'>Where are you going?</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='fake-searchbar__item-container fake-searchbar__item-container_mid'>\r\n\t\t\t\t\t<i className='icon-distance fake-searchbar__icon'></i>\r\n\t\t\t\t\t<div className='fake-searchbar__content'>\r\n\t\t\t\t\t\t<h3 className='fake-searchbar__title'>Distance</h3>\r\n\t\t\t\t\t\t<p className='fake-searchbar__text'>Distance k/m</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='fake-searchbar__item-container fake-searchbar__item-container_last'>\r\n\t\t\t\t\t<i className='icon-avatar fake-searchbar__icon'></i>\r\n\t\t\t\t\t<div className='fake-searchbar__content'>\r\n\t\t\t\t\t\t<h3 className='fake-searchbar__title'>Max People</h3>\r\n\t\t\t\t\t\t<p className='fake-searchbar__text'>0</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='fake-searchbar__search'>\r\n\t\t\t\t\t<i className='icon-search fake-searchbar__search-icon'></i>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default FakeSearchBar","import React, { useRef } from 'react'\r\nimport \"./SkeletonElement.scss\";\r\nimport { useInitializeCSSVariable } from '../../../hooks/useInitializeCSSVariable';\r\ntype Props = {\r\n\tskeletonColor?: string,\r\n\tclassName?: string,\r\n}\r\n\r\nfunction SkeletonElement({ skeletonColor, className }: Props) {\r\n\tconst skeletonRef = useRef<HTMLDivElement | null>(null);\r\n\tuseInitializeCSSVariable(skeletonRef, \"--skeleton-color\", skeletonColor);\r\n\treturn (\r\n\t\t<div ref={skeletonRef} className={`skeleton-element ${className ? className : \"\"}`}></div>\r\n\t)\r\n}\r\n\r\nexport default SkeletonElement","import React, { useEffect, useState } from 'react'\r\nimport \"./Banner.scss\";\r\nimport ImageSkeleton from '../UI/Image/ImageSkeleton';\r\nimport Image from '../UI/Image/Image';\r\nimport { PhotoAPI } from '../../apis/photoAPI';\r\nimport { useFetching } from '../../hooks/useFetching';\r\nimport SkeletonElement from '../UI/skeletonElement/SkeletonElement';\r\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\r\ntype Props = {\r\n\ttext: string,\r\n\tcolorTextIndexes?: number[],\r\n}\r\n\r\nfunction Banner({ text, colorTextIndexes }: Props) {\r\n\tconst [isMobile, isMobileRef] = useMediaQuery(\"(max-width: 768px)\");\r\n\r\n\tconst [textElement, setTextElement] = useState<React.ReactElement | string>(\"\");\r\n\r\n\tfunction initText() {\r\n\t\tif (!colorTextIndexes) {\r\n\t\t\tsetTextElement(text);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet textArr: (React.ReactElement | string)[] = text.split(\" \");\r\n\t\ttextArr = textArr.map((text, idx) => colorTextIndexes.includes(idx) ? <span key={idx} className='_colored-orange'>{text + \" \"}</span> : text + \" \");\r\n\t\tsetTextElement(<h1 className='banner-section__text'>{textArr}</h1>)\r\n\t}\r\n\r\n\tconst [bannerImg, setBannerImg] = useState<string>();\r\n\tconst [getBannerImg, isImgLoading, error] = useFetching(async () => {\r\n\t\tconst image = await PhotoAPI.fetchPhotos({\r\n\t\t\tquery: \"view of a tropical island with overwater bungalows, clear blue ocean, and lush greenery.\",\r\n\t\t\tamount: 1,\r\n\t\t\tpage: Math.round(Math.random() * 20),\r\n\t\t\torientation: \"landscape\",\r\n\t\t\tsize: \"large\",\r\n\t\t});\r\n\t\tif (isMobileRef.current) {\r\n\t\t\tsetBannerImg(image.photos[0].src.large);\r\n\t\t} else {\r\n\t\t\tsetBannerImg(image.photos[0].src.large2x);\r\n\t\t}\r\n\t})\r\n\tuseEffect(() => {\r\n\t\tgetBannerImg();\r\n\t\tinitText();\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className='banner-section'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<div className='banner-section__container'>\r\n\t\t\t\t\t{textElement}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{(isImgLoading || !bannerImg) ?\r\n\t\t\t\t<SkeletonElement className='banner-section__skeleton' />\r\n\t\t\t\t:\r\n\t\t\t\t<ImageSkeleton className='banner-section__image' src={bannerImg}/>\r\n\t\t\t}\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Banner","import React from 'react'\r\nimport \"./SubmitInput.scss\";\r\nimport { Form } from 'react-router-dom';\r\ntype Props = {\r\n\tclassName?: string,\r\n}\r\n\r\nconst SubmitInput = ({className}: Props) => {\r\n\treturn (\r\n\t\t<Form className={`submit-input ${className ? className : \"\"}`} method=\"post\">\r\n\t\t\t<input placeholder='Enter your email' className='submit-input__input' type=\"text\" name=\"title\" />\r\n\t\t\t<button className='submit-input__submit' type=\"submit\">Subscribe</button>\r\n\t\t</Form>\r\n\t)\r\n}\r\n\r\nexport default SubmitInput","import React from 'react'\r\nimport \"./Subscribe.scss\";\r\nimport Image from '../UI/Image/Image';\r\nimport SubmitInput from '../UI/submitInput/SubmitInput';\r\n\r\ntype Props = {\r\n\tclassName?: string,\r\n\tanimated?: boolean,\r\n}\r\n\r\nconst Subscribe = ({ className, animated = true }: Props) => {\r\n\treturn (\r\n\t\t<div className={`subscribe-section ${className ? className : \"\"}`}>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<div className='subscribe-section__container'>\r\n\t\t\t\t\t<div className='subscribe-section__content'>\r\n\t\t\t\t\t\t<h2 className='subscribe-section__title'>Subscribe now to get useful traveling\r\n\t\t\t\t\t\t\tinformation</h2>\r\n\t\t\t\t\t\t<SubmitInput className={`subscribe-section__input ${animated ? \"_scroll-animation-once\" : \"\"}`}></SubmitInput>\r\n\t\t\t\t\t\t<p className='subscribe-section__text'>Enter your email to unlock travel secrets, exclusive deals, and expert tips delivered straight to your inbox!</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Image src={require(\"../../utils/images/png/tourist 2.png\")} className=\"subscribe-section__image _scroll-animation\"></Image>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Subscribe","import { MutableRefObject, RefObject, useContext, useEffect } from \"react\";\r\nimport { ScrollAnimationContext } from \"./ScrollAnimationProvider\";\r\n\r\nexport function useScrollAnimationRef(\r\n  ref: React.MutableRefObject<HTMLElement | null> | null\r\n) {\r\n  const animationObserver = useContext(ScrollAnimationContext);\r\n  useEffect(() => {\r\n\t\tif (!ref || !ref.current) return;\r\n\t\tif (!animationObserver) return;\r\n    animationObserver.observe(ref.current);\r\n    return () => {\r\n\t\t\tif (!ref.current) return;\r\n      animationObserver.unobserve(ref.current);\r\n    };\r\n  }, []);\r\n}\r\n","import { useState } from 'react';\r\n\r\ntype Callback = (...args: any[]) => Promise<any>;\r\n\r\nexport function useFetching<T extends Callback>\r\n\t(callback: T, initialIsLoading = false): [(...args: Parameters<T>) => Promise<void>, boolean, Error | null] {\r\n\r\n\tconst [isLoading, setIsLoading] = useState(initialIsLoading);\r\n\tconst [error, setError] = useState<Error | null>(null);\r\n\tconst fetching = async (...args: Parameters<T>) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tawait callback(...args);\r\n\t\t} catch (e) {\r\n\t\t\tif (e instanceof Error) {\r\n\t\t\t\tsetError(e);\r\n\t\t\t} else {\r\n\t\t\t\tsetError(new Error('Unknown error occurred'));\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\treturn [fetching, isLoading, error];\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { setCSSVariable } from \"../utils/functions\";\r\n\r\nexport function useInitializeCSSVariable(\r\n  ref: React.MutableRefObject<unknown>,\r\n  varName: string,\r\n  value: string | undefined\r\n) {\r\n  useEffect(() => {\r\n    if (!value) return;\r\n    setCSSVariable(ref, varName, value);\r\n  }, []);\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { useReactiveVariable } from \"./useReactiveVariable\";\r\n\r\nexport const useMediaQuery = (\r\n  query: string,\r\n  callback: Function = () => {}\r\n): [boolean, React.MutableRefObject<any>] => {\r\n\tconst [matches, matchesRef, setMatches] = useReactiveVariable(false);\r\n\r\n  const handleChange = (e: MediaQueryListEvent) => {\r\n    setMatches(e.matches);\r\n    if (callback && e.matches) {\r\n      callback(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const m = window.matchMedia(query);\r\n\r\n    setMatches(m.matches);\r\n\r\n    m.addEventListener(\"change\", handleChange);\r\n\r\n    return () => {\r\n      m.removeEventListener(\"change\", handleChange);\r\n    };\r\n  }, []);\r\n\r\n  return [matches, matchesRef];\r\n};\r\n","import { useState, useRef, MutableRefObject } from \"react\";\r\n\r\nexport function useReactiveVariable<T>(startValue: T): [T, MutableRefObject<T>, (value: T) => void] {\r\n  const [renderValue, setRenderValue] = useState<T>(startValue);\r\n  const currentValue = useRef<T>(renderValue);\r\n\r\n  function setValue(value: T) {\r\n    setRenderValue(value);\r\n    currentValue.current = value;\r\n  }\r\n\r\n  return [renderValue, currentValue, setValue];\r\n}","import React from 'react'\r\nimport \"./SearchSection.scss\";\r\nimport FakeSearchBar from '../UI/fakeSearchBar/FakeSearchBar';\r\ntype Props = {\r\n\tclassName?: string,\r\n}\r\n\r\nfunction SearchSection({ className }: Props) {\r\n\treturn (\r\n\t\t<div className={`search-section ${className ? className : \"\"}`}>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<div className='search-section__container'>\r\n\t\t\t\t\t<FakeSearchBar className='search-section__search' />\r\n\t\t\t\t\t<img className='search-section__image' src={require(\"../../utils/images/png/plane.png\")}></img>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SearchSection","import React, { useEffect, useRef, useState } from 'react'\r\nimport ImageSkeleton from '../UI/Image/ImageSkeleton';\r\nimport \"./PaginationGallery.scss\";\r\nimport { useScrollAnimationRef } from '../../context/scrollAnimation/useScrollAnimationRef';\r\ntype Props = {\r\n\tsrcArr: string[],\r\n\tclassName?: string,\r\n}\r\n\r\nfunction PaginationGallery({ className, srcArr }: Props) {\r\n\tconst [images, setImages] = useState<React.ReactElement[] | null>(null);\r\n\tconst galleryRef = useRef<HTMLDivElement | null>(null);\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(()=> {\r\n\t\t\tgalleryRef.current?.classList.add(\"mounted\")\r\n\t\t}, 100)\r\n\t\tsetImages(srcArr.map((item, idx) => (\r\n\t\t\t<PaginationGallaryItem key={idx} src={item} className={`pagination-gallery__item pagination-gallery__item_${idx + 1}`} />\r\n\t\t)))\r\n\t}, [])\r\n\treturn (\r\n\t\t<div ref={galleryRef} className={`pagination-gallery pagination-gallery_init-animation ${className ? className : \"\"}`}>{images}</div>\r\n\t)\r\n}\r\n\r\ntype ItemProps = {\r\n\tsrc?: string,\r\n\tclassName?: string\r\n}\r\n\r\nfunction PaginationGallaryItem({ src, className }: ItemProps) {\r\n\tconst itemRef = useRef<HTMLDivElement | null>(null);\r\n\tuseScrollAnimationRef(itemRef);\r\n\treturn (\r\n\t\t<div ref={itemRef} className={className}>\r\n\t\t\t<ImageSkeleton src={src} className='pagination-gallery__image' />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PaginationGallery","import React, { useState, useEffect } from 'react'\r\nimport SkeletonElement from '../UI/skeletonElement/SkeletonElement';\r\nimport \"./PaginationGallery.scss\";\r\ntype Props = {}\r\n\r\nfunction PaginationGallerySkeleton({ }: Props) {\r\n\tconst [images, setImages] = useState<React.ReactElement[] | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetImages(Array.from({ length: 10 }, (_, idx) => (\r\n\t\t\t<SkeletonElement key={idx} className={`pagination-gallery__item pagination-gallery__item_${idx + 1}`} />\r\n\t\t)))\r\n\t}, [])\r\n\treturn (\r\n\t\t<div className='pagination-gallery'>{images}</div>\r\n\t)\r\n}\r\n\r\nexport default PaginationGallerySkeleton","import React from 'react'\r\nimport \"./Button.scss\";\r\ntype Props = React.ButtonHTMLAttributes<HTMLButtonElement> & {\r\n\tchildren?: React.ReactNode,\r\n\tclassName?: string,\r\n}\r\n\r\nfunction PaginationButton({ children, className, ...args }: Props) {\r\n\treturn (\r\n\t\t<button className={`pagination-button ${className ? className : \"\"}`} {...args}>{children}</button>\r\n\t)\r\n}\r\n\r\nexport default PaginationButton;","import React from 'react'\r\nimport \"./Loader.scss\";\r\ntype Props = {\r\n\tclassName?: string,\r\n}\r\n\r\nfunction Loader({ className }: Props) {\r\n\treturn (\r\n\t\t<div className={`loader ${className ? className : \"\"}`}></div>\r\n\t)\r\n}\r\n\r\nexport default Loader","import React, { useEffect, useRef, useState } from 'react'\r\nimport \"./OurGallery.scss\";\r\nimport PaginationGallery from '../paginationGallery/PaginationGallery';\r\nimport { PhotoAPI } from '../../apis/photoAPI';\r\nimport { useMediaQuery } from '../../hooks/useMediaQuery';\r\nimport { useFetching } from '../../hooks/useFetching';\r\nimport PaginationGallarySkeleton from '../paginationGallery/PaginationGallerySkeleton';\r\nimport PaginationButton from '../UI/button/PaginationButton';\r\nimport Loader from '../UI/loader/Loader';\r\ntype Props = {\r\n\tclassName: string,\r\n}\r\n\r\nfunction OurGallery({ className}: Props) {\r\n\tconst [isMobile, isMobileRef] = useMediaQuery(\"(max-width: 768px)\");\r\n\r\n\tconst [imageArr, setImageArr] = useState<React.ReactElement[] | null>(null);\r\n\tconst [nextImages, setNextImages] = useState<string[] | null>(null);\r\n\tconst totalNumberOfImages = useRef(0);\r\n\tconst [isImagesOver, setIsImagesOver] = useState(false);\r\n\r\n\tconst [getNextImages, isImgLoading, error] = useFetching(async (page: number) => {\r\n\t\tconst images = await PhotoAPI.fetchPhotos({\r\n\t\t\tquery: \"stunning images of famous landmarks and destinations from around the world, including Dubai, UAE; Bali, Indonesia; Sydney, Australia; Yogyakarta, Indonesia; Beijing, China; Big Ben in London, UK; Paris, France; beaches in the Maldives; Phi Phi Island in Thailand; and El Nido in the Philippines.\",\r\n\t\t\tamount: 10,\r\n\t\t\tpage: page,\r\n\t\t\torientation: \"square\",\r\n\t\t})\r\n\t\ttotalNumberOfImages.current = images.total_results;\r\n\t\tsetNextImages(images.photos.map(photo => isMobileRef.current ? photo.src.medium : photo.src.large));\r\n\t}, true)\r\n\r\n\tfunction loadMore() {\r\n\t\tif (!imageArr) return;\r\n\t\tgetNextImages(imageArr.length + 1);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!imageArr) return;\r\n\t\tif (totalNumberOfImages.current - imageArr.length * 10 < 10) {\r\n\t\t\tsetIsImagesOver(true);\r\n\t\t}\r\n\t}, [imageArr]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!nextImages) return;\r\n\t\tif (!imageArr) {\r\n\t\t\tsetImageArr([<PaginationGallery key={1} srcArr={nextImages} />]);\r\n\t\t} else {\r\n\t\t\tsetImageArr([...imageArr, <PaginationGallery className=\"our-gallery__item-gap\" key={imageArr.length + 1} srcArr={nextImages} />]);\r\n\t\t}\r\n\r\n\t}, [nextImages])\r\n\r\n\tuseEffect(() => {\r\n\t\tgetNextImages(1);\r\n\t}, [])\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className={`our-gallery ${className}`}>\r\n\t\t\t\t<h2 className='our-gallery__title'>Best Tour <span className='_colored-orange'>Galary</span></h2>\r\n\t\t\t\t{imageArr ?\r\n\t\t\t\t\timageArr\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<PaginationGallarySkeleton />\r\n\t\t\t\t}\r\n\t\t\t\t{isImagesOver ? \"\"\r\n\t\t\t\t\t:\r\n\t\t\t\t\tisImgLoading ?\r\n\t\t\t\t\t\t<Loader className='our-gallery__loader' />\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t// <Loader className='our-gallery__loader'/>\r\n\t\t\t\t\t\t<PaginationButton className='our-gallery__button' onClick={loadMore}>Load More</PaginationButton>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default OurGallery","import React, { useEffect } from 'react'\r\nimport \"./GalleryPage.scss\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useHeaderType } from '../../App';\r\nimport Banner from '../../componenets/banner/Banner';\r\nimport SearchSection from '../../componenets/searchSection/SearchSection';\r\nimport OurGallery from '../../componenets/ourGallery/OurGallery';\r\nimport Subscribe from '../../componenets/subscribe/Subscribe';\r\nimport useScrollAnimation from '../../context/scrollAnimation/useScrollAnimation';\r\nimport useScrollAnimationOnce from '../../context/scrollAnimationOnce/useScrollAnimationOnce';\r\ntype Props = {}\r\n\r\nfunction GalleryPage({ }: Props) {\r\n\tuseScrollAnimationOnce();\r\n\tconst setHeaderType = useHeaderType();\r\n\tuseEffect(() => {\r\n\t\tsetHeaderType(\"all\");\r\n\t}, [])\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Banner text={\"Our Gallery\"} colorTextIndexes={[0]} />\r\n\t\t\t<SearchSection className='gallery-page__search' />\r\n\t\t\t<OurGallery className='gallery-page__gallery' />\r\n\t\t\t<Subscribe animated={false} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default GalleryPage"],"names":["PhotoAPI","fetchPhotos","_ref","query","amount","page","size","orientation","color","response","fetch","concat","method","headers","Authorization","process","json","className","imgFit","src","imgAttributes","_jsx","children","loading","style","objectFit","skeletonColor","imgLoaded","loaded","setLoaded","useState","useEffect","img","document","createElement","onload","useIsImageLoaded","skeletonElementRef","useRef","useInitializeCSSVariable","ref","_jsxs","skeletonRef","text","colorTextIndexes","isMobile","isMobileRef","useMediaQuery","textElement","setTextElement","bannerImg","setBannerImg","getBannerImg","isImgLoading","error","useFetching","async","image","Math","round","random","current","photos","large","large2x","textArr","split","map","idx","includes","initText","SkeletonElement","ImageSkeleton","Form","placeholder","type","name","animated","SubmitInput","Image","require","useScrollAnimationRef","animationObserver","useContext","ScrollAnimationContext","observe","unobserve","callback","initialIsLoading","arguments","length","undefined","isLoading","setIsLoading","setError","e","Error","varName","value","setCSSVariable","matches","matchesRef","setMatches","useReactiveVariable","handleChange","m","window","matchMedia","addEventListener","removeEventListener","startValue","renderValue","setRenderValue","currentValue","FakeSearchBar","PaginationGallaryItem","_ref2","itemRef","srcArr","images","setImages","galleryRef","setTimeout","_galleryRef$current","classList","add","item","Array","from","_","args","imageArr","setImageArr","nextImages","setNextImages","totalNumberOfImages","isImagesOver","setIsImagesOver","getNextImages","total_results","photo","medium","PaginationGallery","PaginationGallarySkeleton","Loader","PaginationButton","onClick","useScrollAnimationOnce","setHeaderType","useHeaderType","Banner","SearchSection","OurGallery","Subscribe"],"sourceRoot":""}